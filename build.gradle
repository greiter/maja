plugins {
  id "io.freefair.lombok" version "5.3.0"
  id 'java-library'
  id 'maven-publish'
  id 'com.github.ben-manes.versions' version '0.33.0'
  id 'se.patrikerdes.use-latest-versions' version '0.2.15'
}

group = 'net.io_0'
version = "1.5.1-SNAPSHOT"
sourceCompatibility = 11

repositories {
  mavenCentral()
}

dependencies {
  implementation 'ch.qos.logback:logback-classic:1.2.3'
  implementation 'commons-validator:commons-validator:1.7', {
    exclude group: 'commons-beanutils', module: 'commons-beanutils' // potential security issue
    exclude group: 'commons-digester', module: 'commons-digester'
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.3'
  implementation 'com.pivovarit:throwing-function:1.5.1'
  implementation 'org.jooq:joor:0.9.13'
  testImplementation 'org.skyscreamer:jsonassert:1.5.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
  useJUnitPlatform()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

// disallow release candidates as upgradable versions from stable
dependencyUpdates.configure {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { String kw -> version.toUpperCase().contains(kw) }
    return !stableKeyword && !(version ==~ /^[0-9,.v-]+(-r)?$/)
  }

  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}
